spring:
  datasource:
    driver: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/food-ordering-service
    username: postgres
    password: example

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

  kafka:
    bootstrap-servers: localhost:9092
    topic:
      restaurant-inventory-reservation-request: RESTAURANT_INVENTORY_RESERVATION_REQUEST
      restaurant-inventory-reservation-response: RESTAURANT_INVENTORY_RESERVATION_RESPONSE
      restaurant-inventory-reservation-cancel-request: RESTAURANT_CANCEL_INVENTORY_RESERVATION_REQUEST
      restaurant-inventory-reservation-cancel-response: RESTAURANT_CANCEL_INVENTORY_RESERVATION_RESPONSE
      payment-process-request: PAYMENT_PROCESS_REQUEST
      payment-process-response: PAYMENT_PROCESS_RESPONSE
      payment-cancel-request: PAYMENT_CANCEL_REQUEST
      payment-cancel-response: PAYMENT_CANCEL_RESPONSE
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: 'com.food.ordering.system.common.messaging.*'